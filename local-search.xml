<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>频数趋于概率实验</title>
    <link href="/posts/Frequency&amp;Probability.html"/>
    <url>/posts/Frequency&amp;Probability.html</url>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>在昨天的数学课上，数学老师讲授了概率单元——频数与概率间的关系，即试验次数越多，一种事件发生的次数与试验次数的比值接近事件发生概率。基于以上，我花了几分钟完成了一个Python程序来验证这个结论<del>(虽然调用的随机模块是伪随机)</del>，通过输出的结果可以发现，试验次数越多正反面两种事件的频数越来越接近0.5，即50%的概率。</p><h2 id="主程序"><a href="#主程序" class="headerlink" title="主程序"></a>主程序</h2><h3 id="库导入"><a href="#库导入" class="headerlink" title="库导入"></a>库导入</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> random<br></code></pre></td></tr></table></figure><h3 id="设置变量"><a href="#设置变量" class="headerlink" title="设置变量"></a>设置变量</h3><p>在这里，我们定义——<strong>0</strong>代表<strong>正面</strong>、<strong>1</strong>代表<strong>反面</strong><br>times为硬币投掷总次数temp_0为正面事件出现的次数temp_1为反面事件出现的次数<br>所有变量初始化，即得：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python">times=<span class="hljs-number">0</span><br>temp_0=<span class="hljs-number">0</span><br>temp_1=<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>temp为调用随机int形整数，取值范围为0~1间的整数，即0，1两种可能。times即为试验次数，每一次循环将值+1，即得:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    temp=random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>) <span class="hljs-comment">#0正面 1反面</span><br>    times=times+<span class="hljs-number">1</span> <span class="hljs-comment">#每次循环将自身(times)+1</span><br></code></pre></td></tr></table></figure><h3 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h3><h4 id="正面"><a href="#正面" class="headerlink" title="正面"></a>正面</h4><p>当此次随机结果为0，即事件为正面时。将temp_0(正面次数)值+1。</p><p>num0定义——当前<strong>正面</strong>事件次数与当前<strong>投掷总次数</strong>的比值，即频数</p><p>通过print命令将投掷总次数、正面次数及正面频数输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">if</span> temp == <span class="hljs-number">0</span>:<br>    temp_0=temp_0+<span class="hljs-number">1</span><br>    num0=temp_0/times<br>    <span class="hljs-built_in">print</span>(times, <span class="hljs-string">&quot;次 ， 正面&quot;</span>,temp_0,<span class="hljs-string">&quot;次 , 频数= &quot;</span>,num0,file=f)<br>    <span class="hljs-built_in">print</span>(times)<br></code></pre></td></tr></table></figure><h4 id="反面"><a href="#反面" class="headerlink" title="反面"></a>反面</h4><p>当此次随机结果为1，即事件为反面时。将temp_1(反面次数)值+1。</p><p>num1定义——当前<strong>反面</strong>事件次数与当前<strong>投掷总次数</strong>的比值，即频数</p><p>通过print命令将投掷总次数、反面次数及反面频数输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">else</span>:<br>    temp_1=temp_1+<span class="hljs-number">1</span><br>    num1 = temp_1 / times<br>    <span class="hljs-built_in">print</span>(times, <span class="hljs-string">&quot;次 ， 反面&quot;</span>,temp_1,<span class="hljs-string">&quot;次 , 频数= &quot;</span>,num1,file=f)<br>    <span class="hljs-built_in">print</span>(times)<br></code></pre></td></tr></table></figure><h3 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h3><p>所以如何停止这个循环呢？<del>当你觉得它运行了足够的次数ctrl+c就好了(雾)</del></p><h2 id="运算结果"><a href="#运算结果" class="headerlink" title="运算结果"></a>运算结果</h2><p><strong>text文件 (coin.txt)，输出109MB数据</strong>，<strong>windows记事本失效</strong>，使用 <strong>notepad++</strong> 才能打开<br>示例：<br>2001683 次 ， 正面 1000800 次 , 频数&#x3D;  0.49997926744644383<br>2001684 次 ， 反面 1000884 次 , 频数&#x3D;  0.5000209823328757<br>2001685 次 ， 反面 1000885 次 , 频数&#x3D;  0.5000212321119457<br>2001686 次 ， 反面 1000886 次 , 频数&#x3D;  0.5000214818907661<br>2001687 次 ， 正面 1000801 次 , 频数&#x3D;  0.49997876790926854</p><p><strong>text文件 (coin_2.82GB.txt)，输出2.82GB数据</strong>，<strong>windows记事本失效</strong>，<strong>notepad++失效</strong>，至少使用<strong>内存分配</strong>为<strong>4096MB</strong>的<strong>Visual Studio Code</strong>才能打开，但仍会出现<em><strong>字符丢失</strong></em>的现象。<br>示例：<br>50127693次，频数&#x3D;0.4999736971737359<br>50127694次，频数&#x3D;0.49997370714878686<br>50127695次，频数&#x3D;0.5000263028252147<br>50127696次，频数&#x3D;0.4999737071498359<br>50127697次，频数&#x3D;0.5000263028241653<br>50127698次，频数&#x3D;0.4999737071508849</p><p><em><strong>可单击以下链接跳转到网盘</strong></em></p><p><a href="https://pan.baidu.com/s/1bpsXNGKbgWIStDpoxXZ8-g?pwd=ATRI">百度网盘下载coin.txt文件</a></p><p><a href="https://pan.baidu.com/s/1OB5lwdpns19j1dieqLrXzg?pwd=ATRI">百度网盘下载coin_2.82GB.txt文件</a></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>这里附上基本源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> random<br>times=<span class="hljs-number">0</span><br>temp_0=<span class="hljs-number">0</span><br>temp_1=<span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    temp=random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>) <span class="hljs-comment">#0正面 1反面</span><br>    times=times+<span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> temp == <span class="hljs-number">0</span>:<br>        temp_0=temp_0+<span class="hljs-number">1</span><br>        num0=temp_0/times<br>        <span class="hljs-built_in">print</span>(times, <span class="hljs-string">&quot;次 ， 正面&quot;</span>,temp_0,<span class="hljs-string">&quot;次 , 频数= &quot;</span>,num0,file=f)<br>        <span class="hljs-built_in">print</span>(times)<br>    <span class="hljs-keyword">else</span>:<br>        temp_1=temp_1+<span class="hljs-number">1</span><br>        num1 = temp_1 / times<br>        <span class="hljs-built_in">print</span>(times, <span class="hljs-string">&quot;次 ， 反面&quot;</span>,temp_1,<span class="hljs-string">&quot;次 , 频数= &quot;</span>,num1,file=f)<br>        <span class="hljs-built_in">print</span>(times)<br></code></pre></td></tr></table></figure><h2 id="版本更新"><a href="#版本更新" class="headerlink" title="版本更新"></a>版本更新</h2><p>更新次数&#x3D;1</p><p>更新日期及时间：2022年9月10日 15点21分</p><h3 id="写入txt文件"><a href="#写入txt文件" class="headerlink" title="写入txt文件"></a>写入txt文件</h3><p>通过运行代码我发现，如过长时间运行会产生大量的数据，而他们都被输出在窗口里，大量复制的时候就会卡顿，极不方便保存或查看，因此将输出内容改输出到txt文件中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> random<br>times=<span class="hljs-number">0</span><br>temp_0=<span class="hljs-number">0</span><br>temp_1=<span class="hljs-number">0</span><br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;coin.txt&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>)<br></code></pre></td></tr></table></figure><p>更新内容即加入f &#x3D; open(“coin.txt”, “a”)语句,a指代写入模式或者说类型、方式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">if</span> temp == <span class="hljs-number">0</span>:<br>    temp_0=temp_0+<span class="hljs-number">1</span><br>    num0=temp_0/times<br>    <span class="hljs-built_in">print</span>(times, <span class="hljs-string">&quot;次 ， 正面&quot;</span>,temp_0,<span class="hljs-string">&quot;次 , 频数= &quot;</span>,num0,file=f)<br>    <span class="hljs-built_in">print</span>(times)<br><span class="hljs-keyword">else</span>:<br>    temp_1=temp_1+<span class="hljs-number">1</span><br>    num1 = temp_1 / times<br>    <span class="hljs-built_in">print</span>(times, <span class="hljs-string">&quot;次 ， 反面&quot;</span>,temp_1,<span class="hljs-string">&quot;次 , 频数= &quot;</span>,num1,file=f)<br>    <span class="hljs-built_in">print</span>(times)<br></code></pre></td></tr></table></figure><p>在print后加入file&#x3D;f，以写入文件。</p><h4 id="更新源码"><a href="#更新源码" class="headerlink" title="更新源码"></a>更新源码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> random<br>times=<span class="hljs-number">0</span><br>temp_0=<span class="hljs-number">0</span><br>temp_1=<span class="hljs-number">0</span><br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;coin.txt&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    temp=random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>) <span class="hljs-comment">#0正面 1反面</span><br>    times=times+<span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> temp == <span class="hljs-number">0</span>:<br>        temp_0=temp_0+<span class="hljs-number">1</span><br>        num0=temp_0/times<br>        <span class="hljs-built_in">print</span>(times, <span class="hljs-string">&quot;次 ， 正面&quot;</span>,temp_0,<span class="hljs-string">&quot;次 , 频数= &quot;</span>,num0,file=f)<br>        <span class="hljs-built_in">print</span>(times)<br>    <span class="hljs-keyword">else</span>:<br>        temp_1=temp_1+<span class="hljs-number">1</span><br>        num1 = temp_1 / times<br>        <span class="hljs-built_in">print</span>(times, <span class="hljs-string">&quot;次 ， 反面&quot;</span>,temp_1,<span class="hljs-string">&quot;次 , 频数= &quot;</span>,num1,file=f)<br>        <span class="hljs-built_in">print</span>(times)<br></code></pre></td></tr></table></figure><h3 id="写入word文件"><a href="#写入word文件" class="headerlink" title="写入word文件"></a>写入word文件</h3><p>更新次数&#x3D;2</p><p>更新日期及时间：2022年9月10日 16点06分</p><h4 id="安装库"><a href="#安装库" class="headerlink" title="安装库"></a>安装库</h4><p>通过命令pip install安装python-docx库，下面附上终端显示内容</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cmd">Windows PowerShell<br>版权所有（C） Microsoft Corporation。保留所有权利。<br>安装最新的 PowerShell，了解新功能和改进！https://aka.ms/PSWindows<br><br>PS D:\Python\Scripts&gt; pip install python-docx<br><br>Collecting python-docx<br>  Downloading python-docx-<span class="hljs-number">0</span>.<span class="hljs-number">8</span>.<span class="hljs-number">11</span>.tar.gz (<span class="hljs-number">5</span>.<span class="hljs-number">6</span> MB)<br>     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ <span class="hljs-number">5</span>.<span class="hljs-number">6</span>/<span class="hljs-number">5</span>.<span class="hljs-number">6</span> MB <span class="hljs-number">87</span>.<span class="hljs-number">9</span> kB/s eta <span class="hljs-number">0</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span><br>  Preparing metadata (setup.py) ... done<br>Requirement already satisfied: lxml&gt;=<span class="hljs-number">2</span>.<span class="hljs-number">3</span>.<span class="hljs-number">2</span> <span class="hljs-keyword">in</span> d:\python\lib\site-packages (from python-docx) (<span class="hljs-number">4</span>.<span class="hljs-number">9</span>.<span class="hljs-number">1</span>)<br>Using legacy &#x27;setup.py install&#x27; <span class="hljs-keyword">for</span> python-docx, since package &#x27;wheel&#x27; is <span class="hljs-keyword">not</span> installed.<br>Installing collected packages: python-docx<br>  Running setup.py install <span class="hljs-keyword">for</span> python-docx ... done<br>Successfully installed python-docx-<span class="hljs-number">0</span>.<span class="hljs-number">8</span>.<span class="hljs-number">11</span><br><br>PS D:\Python\Scripts&gt;<br></code></pre></td></tr></table></figure><h4 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h4><p>通过import docx导入 docx库以控制docx文件</p><p>file&#x3D;docx.Document() ，使docx.Document()简略为file</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> docx<br>times=<span class="hljs-number">0</span><br>temp_0=<span class="hljs-number">0</span><br>temp_1=<span class="hljs-number">0</span><br>file=docx.Document()<br></code></pre></td></tr></table></figure><h4 id="写入语句"><a href="#写入语句" class="headerlink" title="写入语句"></a>写入语句</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">file.add_paragraph(<span class="hljs-string">&quot;%s次 ，正面%s次 ，频数=%s&quot;</span>%(times,temp_0,num0))<br></code></pre></td></tr></table></figure><p>在file&#x3D;docx.Document() 下为file.add_paragraph。展开为docx.Document().add_paragraph()。docx.Document().add_paragraph()是docx库中写入的语句</p><h4 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">file.save(<span class="hljs-string">&quot;E:\python\coin.docx&quot;</span>)<br></code></pre></td></tr></table></figure><p>docx.Document().save()是docx库中存储的语句，将输出的文件导出到绝对路径并保存</p><h4 id="更新源码-1"><a href="#更新源码-1" class="headerlink" title="更新源码"></a>更新源码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> docx<br>times=<span class="hljs-number">0</span><br>temp_0=<span class="hljs-number">0</span><br>temp_1=<span class="hljs-number">0</span><br>file=docx.Document()<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    temp=random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>) <span class="hljs-comment">#0正面 1反面</span><br>    times=times+<span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> temp == <span class="hljs-number">0</span>:<br>        temp_0=temp_0+<span class="hljs-number">1</span><br>        num0=temp_0/times<br>        file.add_paragraph(<span class="hljs-string">&quot;%s次 ，正面%s次 ，频数=%s&quot;</span>%(times,temp_0,num0))<br>        <span class="hljs-built_in">print</span>(times)<br>    <span class="hljs-keyword">else</span>:<br>        temp_1=temp_1+<span class="hljs-number">1</span><br>        num1 = temp_1 / times<br>        file.add_paragraph(<span class="hljs-string">&quot;%s次 ，反面%s次 ，频数=%s&quot;</span>%(times,temp_1,num1))<br>        file.save(<span class="hljs-string">&quot;E:\python\coin.docx&quot;</span>)<br>        <span class="hljs-built_in">print</span>(times)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python数据处理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python数据处理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>二次函数计算器</title>
    <link href="/posts/QuadraticFunction_calculator.html"/>
    <url>/posts/QuadraticFunction_calculator.html</url>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>这是一个使用Python语言编写的程序。目前包括[①获得该函数图像 ②分析函数 ③为段值列表 ⨀更换函数重新运行]四项功能。调用了三个库，分别是time、matplotlib.pyplot、numpy。思路是将各个功能做成以Def定义的部分，方便被主程序调用，而且还可以通过“自己调用自己”的方式做到循环的目的。以下篇幅将列举出每个模块部分。</p><h2 id="Def定义"><a href="#Def定义" class="headerlink" title="Def定义"></a>Def定义</h2><h3 id="数据输入"><a href="#数据输入" class="headerlink" title="数据输入"></a>数据输入</h3><p>输入<font color=#6495ED>一般式 </font><font color=#39C5BB> ax^2+bx+c </font> 中的 <font color=#39C5BB>a、b、c 三个系数</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs PYTHON"><span class="hljs-keyword">def</span> <span class="hljs-title function_">key_input</span>():<br><span class="hljs-keyword">global</span> a<br>a=<span class="hljs-built_in">float</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;a=&quot;</span>))<br><span class="hljs-keyword">global</span> b<br>b = <span class="hljs-built_in">float</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;b=&quot;</span>))<br><span class="hljs-keyword">global</span> c<br>c = <span class="hljs-built_in">float</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;c=&quot;</span>))<br></code></pre></td></tr></table></figure><p>极其简单的语句，<del>我当时第一遍的时候忘了用global让它变成全局变量，然后就报了一次错</del></p><h3 id="函数分析"><a href="#函数分析" class="headerlink" title="函数分析"></a>函数分析</h3><p>二次函数的一般式<font color=#39C5BB> ax^2+bx+c </font>，其中<font color=#39C5BB>a(二次项系数)</font>的正负决定了函数开口的方向，即可判断方向。一般式中二次函数的顶点为<font color=#39C5BB> (-b&#x2F;2a , (4ac-b^2)&#x2F;4a) </font> ，同时<font color=#39C5BB> x&#x3D;-b&#x2F;2a </font> 是函数的对称轴，即得。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs PYTHON"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Funcation_analysis</span>():<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;二次函数——函数分析&quot;</span>)<br><br>x_apex=-(b/(<span class="hljs-number">2</span>*a))<br>y_apex=(((<span class="hljs-number">4</span>*a*c)-(b**<span class="hljs-number">2</span>))/(<span class="hljs-number">4</span>*a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;函数顶点(%f,%f)&quot;</span>%(x_apex,y_apex))<br><br><br>function_x=-(b/(<span class="hljs-number">2</span>*a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;函数对称轴x=&quot;</span>,function_x)<br><br><br><span class="hljs-keyword">if</span> a&gt;<span class="hljs-number">0</span>:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵a&gt;0 ∴函数存在最小值——当x=%f或y=%f时&quot;</span>%(x_apex,y_apex))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∴二次函数开口向上，最大值不存在&quot;</span>)<br><span class="hljs-keyword">else</span>:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵a&lt;0 ∴函数存在最大值——当x=%f或y=%f时&quot;</span> % (x_apex, y_apex))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∴二次函数开口向下，最小值不存在&quot;</span>)<br></code></pre></td></tr></table></figure><p><strong>图像示例:</strong><br><img src="https://z4a.net/images/2022/09/12/236f31e3857366c76.png" alt="函数分析示例" style="zoom:150%;" /></p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>输入起始值、终止值、步进值，经过判断后执行 int((终止值 - 起始值)&#x2F; 步进值) 次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs PYTHON"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Funcation_list_X</span>():<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;输入仅保留三位小数&quot;</span>)<br>x_start = <span class="hljs-built_in">round</span>(<span class="hljs-built_in">float</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;x起始点&quot;</span>)),<span class="hljs-number">3</span>)<br>x_finish = <span class="hljs-built_in">round</span>(<span class="hljs-built_in">float</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;x终止点&quot;</span>)),<span class="hljs-number">3</span>)<br>l = <span class="hljs-built_in">round</span>(<span class="hljs-built_in">float</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;x轴步进值&quot;</span>)),<span class="hljs-number">3</span>)<br><span class="hljs-keyword">if</span> x_finish&lt;x_start:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;终止值x必须小于初始值x&quot;</span>)<br>Funcation_list_X()<br><span class="hljs-keyword">else</span>:<br><span class="hljs-keyword">while</span> <span class="hljs-built_in">int</span>((x_finish - x_start)/l):<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;(%f,%f)&quot;</span>%(x_start,a*x_start**<span class="hljs-number">2</span>+b*x_start+c))<br>x_start = x_start + l<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;(%f,%f)&quot;</span>%(x_start,a*x_start**<span class="hljs-number">2</span>+b*x_start+c))<br></code></pre></td></tr></table></figure><p><del>一定要注意print的用法，我之前误用%d了，结果就是小数值被取整结果就不对了</del><br><strong>图像示例：</strong><br><img src="https://z4a.net/images/2022/09/12/3abe17aaf9ebc6c25.png" alt="数据列表示例" style="zoom:67%;" /></p><h3 id="绘制图像"><a href="#绘制图像" class="headerlink" title="绘制图像"></a>绘制图像</h3><p>通过 import matplotlib.pyplot as plt 与 import numpy 绘制函数图像，import time 可用可不用，这里我只是使用它统计加载时间，仅绘图可去掉时间统计部份</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs PYTHON"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Painting_Funcation</span>():<br><span class="hljs-keyword">global</span> t_s <span class="hljs-comment">#(时间统计)设置全局变量</span><br>t_s=time.perf_counter() <span class="hljs-comment">#启用时间统计</span><br>x=numpy.linspace(-<span class="hljs-number">40</span>,<span class="hljs-number">40</span>,<span class="hljs-number">100</span>) <span class="hljs-comment">#设置绘制范围及步进</span><br>y=a*x**<span class="hljs-number">2</span>+b*x+c <span class="hljs-comment">#设置解析式</span><br>plt.plot(x, y) <span class="hljs-comment">#调用库进行绘制</span><br>plt.xlabel(<span class="hljs-string">&quot;X&quot;</span>)<br>plt.ylabel(<span class="hljs-string">&quot;Y&quot;</span>)<br><span class="hljs-keyword">global</span> t_f<br>t_f = time.perf_counter() <span class="hljs-comment">#(时间统计)</span><br>t_n = t_f - t_s <span class="hljs-comment">#计算时间差值</span><br>t_n = <span class="hljs-built_in">round</span>(t_n, <span class="hljs-number">3</span>) <span class="hljs-comment">#(对浮点时间数据进行位数保留)</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;完成,用时%f秒&quot;</span> % (t_n))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;关闭matplotlib窗口以进行下一循环&quot;</span>)<br>plt.show() <span class="hljs-comment">#显示调用后的绘制窗口</span><br></code></pre></td></tr></table></figure><p><strong>图像示例：</strong><br><img src="https://z4a.net/images/2022/09/12/1d6e6d96819de01c4.png" alt="二次函数图像示例" style="zoom: 67%;" /></p><h2 id="主程序"><a href="#主程序" class="headerlink" title="主程序"></a>主程序</h2><p>简简单单的询问逻辑，这里体现了上文中提到的”自己调用自己”。<br><font color=#FF0000>注意:第10行的Funcation_analysis()加载出的plt绘制窗口只有关闭才会继续向下执行main()</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs PYTHON"><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>Answer=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;①获得该函数图像 ②分析函数 ③为段值列表 ⨀更换函数重新运行 ***(选项外任意键)结束程序***,键入数字以进行操作=&quot;</span>))<br><span class="hljs-keyword">try</span>:<br><span class="hljs-keyword">if</span> Answer==<span class="hljs-number">1</span>:<br>Painting_Funcation()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;已关闭&quot;</span>)<br>main()<br><br><span class="hljs-keyword">elif</span> Answer==<span class="hljs-number">2</span>:<br>Funcation_analysis()<br>main()<br><br><span class="hljs-keyword">elif</span> Answer==<span class="hljs-number">3</span>:<br>Funcation_list_X()<br>main()<br><br><span class="hljs-keyword">elif</span> Answer==<span class="hljs-number">3</span>:<br>main()<br><br><span class="hljs-keyword">elif</span> Answer==<span class="hljs-number">0</span>:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;请输入二次函数一般式，以进行下一步操作&quot;</span>)<br>key_input() <span class="hljs-comment">#重新输入一般式，实现更换值重复运行</span><br>main()<br><br><span class="hljs-keyword">except</span>:<br>exit(<span class="hljs-number">0</span>)<br><br><span class="hljs-comment">#_Main_</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;请输入二次函数一般式，以进行下一步操作&quot;</span>)<br>key_input()<br>main()<br></code></pre></td></tr></table></figure><p>到这里已经可以实现基本的功能了。<del>如果加入新的功能，未来将会更新文章</del></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>这里附上源码及示例图像，<del>使用的时候注意自己是否已经安装被import的库</del></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs PYTHON"><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">key_input</span>():<br><span class="hljs-keyword">global</span> a<br>a=<span class="hljs-built_in">float</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;a=&quot;</span>))<br><span class="hljs-keyword">global</span> b<br>b = <span class="hljs-built_in">float</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;b=&quot;</span>))<br><span class="hljs-keyword">global</span> c<br>c = <span class="hljs-built_in">float</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;c=&quot;</span>))<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Funcation_analysis</span>():<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;二次函数——函数分析&quot;</span>)<br><br>x_apex=-(b/(<span class="hljs-number">2</span>*a))<br>y_apex=(((<span class="hljs-number">4</span>*a*c)-(b**<span class="hljs-number">2</span>))/(<span class="hljs-number">4</span>*a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;函数顶点(%f,%f)&quot;</span>%(x_apex,y_apex))<br><br><br>function_x=-(b/(<span class="hljs-number">2</span>*a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;函数对称轴x=&quot;</span>,function_x)<br><br><br><span class="hljs-keyword">if</span> a&gt;<span class="hljs-number">0</span>:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵a&gt;0 ∴函数存在最小值——当x=%d或y=%s时&quot;</span>%(x_apex,y_apex))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∴二次函数开口向上，最大值不存在&quot;</span>)<br><span class="hljs-keyword">else</span>:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵a&lt;0 ∴函数存在最大值——当x=%d或y=%s时&quot;</span> % (x_apex, y_apex))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∴二次函数开口向下，最小值不存在&quot;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Funcation_list_X</span>():<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;输入仅保留三位小数&quot;</span>)<br>x_start = <span class="hljs-built_in">round</span>(<span class="hljs-built_in">float</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;x起始点&quot;</span>)),<span class="hljs-number">3</span>)<br>x_finish = <span class="hljs-built_in">round</span>(<span class="hljs-built_in">float</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;x终止点&quot;</span>)),<span class="hljs-number">3</span>)<br>l = <span class="hljs-built_in">round</span>(<span class="hljs-built_in">float</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;x轴步进值&quot;</span>)),<span class="hljs-number">3</span>)<br><span class="hljs-keyword">if</span> x_finish&lt;x_start:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;终止值x必须小于初始值x&quot;</span>)<br>Funcation_list_X()<br><span class="hljs-keyword">else</span>:<br><span class="hljs-keyword">while</span> <span class="hljs-built_in">int</span>((x_finish - x_start)/l):<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;(%f,%f)&quot;</span>%(x_start,a*x_start**<span class="hljs-number">2</span>+b*x_start+c))<br>x_start = x_start + l<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;(%f,%f)&quot;</span>%(x_start,a*x_start**<span class="hljs-number">2</span>+b*x_start+c))<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Painting_Funcation</span>():<br><span class="hljs-keyword">global</span> t_s<br>t_s=time.perf_counter()<br>x=numpy.linspace(-<span class="hljs-number">40</span>,<span class="hljs-number">40</span>,<span class="hljs-number">100</span>)<br>y=a*x**<span class="hljs-number">2</span>+b*x+c<br>plt.plot(x, y)<br>plt.xlabel(<span class="hljs-string">&quot;X&quot;</span>)<br>plt.ylabel(<span class="hljs-string">&quot;Y&quot;</span>)<br><span class="hljs-keyword">global</span> t_f<br>t_f = time.perf_counter()<br>t_n = t_f - t_s<br>t_n = <span class="hljs-built_in">round</span>(t_n, <span class="hljs-number">3</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;完成,用时%f秒&quot;</span> % (t_n))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;关闭matplotlib窗口以进行下一循环&quot;</span>)<br>plt.show()<br><br><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>Answer=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;①获得该函数图像 ②分析函数 ③为段值列表 ⨀更换函数重新运行 ***(选项外任意键)结束程序***,键入数字以进行操作=&quot;</span>))<br><span class="hljs-keyword">try</span>:<br><span class="hljs-keyword">if</span> Answer==<span class="hljs-number">1</span>:<br>Painting_Funcation()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;已关闭&quot;</span>)<br>main()<br><br><span class="hljs-keyword">elif</span> Answer==<span class="hljs-number">2</span>:<br>Funcation_analysis()<br>main()<br><br><span class="hljs-keyword">elif</span> Answer==<span class="hljs-number">3</span>:<br>Funcation_list_X()<br>main()<br><br><span class="hljs-keyword">elif</span> Answer==<span class="hljs-number">3</span>:<br>main()<br><br><span class="hljs-keyword">elif</span> Answer==<span class="hljs-number">0</span>:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;请输入二次函数一般式，以进行下一步操作&quot;</span>)<br>key_input()<br>main()<br><br><span class="hljs-keyword">except</span>:<br>exit(<span class="hljs-number">0</span>)<br><br><span class="hljs-comment">#_Main_</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;请输入二次函数一般式，以进行下一步操作&quot;</span>)<br>key_input()<br>main()<br></code></pre></td></tr></table></figure><p><strong>图像示例:</strong><br><img src="https://z4a.net/images/2022/09/12/47509a7087369e1d3.png" alt="基本功能示例" style="zoom: 67%;" /></p><h2 id="版本更新"><a href="#版本更新" class="headerlink" title="版本更新"></a>版本更新</h2><h3 id="x轴与y轴交点计算"><a href="#x轴与y轴交点计算" class="headerlink" title="x轴与y轴交点计算"></a>x轴与y轴交点计算</h3><p>更新次数&#x3D;1<br>更新日期及时间：2022年8月22日 20点55分<br><br><br>二次函数解析式 y&#x3D;ax^2+bx+c 可以看作是一个一元二次方程式，这里程序将使用”公式法“对方程求解。<br><br><br>首先求Δ的值，求值公式为 Δ&#x3D;b^2-4ac<br><br><br>在一元二次方程中 Δ&gt;0 意味着方程有两个不相等的实数根；Δ&#x3D;0 意味着方程有两个相等的实数根；Δ&lt;0 意味着方程没有实数根。<br><br><br>在二次函数中 Δ&gt;0 代表着该二次函数与x轴有两个交点；Δ&#x3D;0 代表着该二次函数与x轴至多有一个交点； Δ&lt;0 代表着该二次函数与x轴没有交点。<br><br><br>作为一次版本更新，自然是有较大改动的。这次是可以输出运算过程的更新。首先编写一个万用的开头，如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs PYTHON"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Funcation_analysis</span>():<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;二次函数——函数分析&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;对称轴:&quot;</span>)<br>function_x = -(b / (<span class="hljs-number">2</span> * a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;函数对称轴x=&quot;</span>, function_x)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特殊点:&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;①顶点:&quot;</span>)<br>x_apex=-(b/(<span class="hljs-number">2</span>*a))<br>y_apex=(((<span class="hljs-number">4</span>*a*c)-(b**<span class="hljs-number">2</span>))/(<span class="hljs-number">4</span>*a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;函数顶点(%s,%s)&quot;</span>%(x_apex,y_apex))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;②y轴交点:&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;函数交y轴于(0,%s)&quot;</span> % c)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;③x轴交点:&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x轴交点计算过程如下&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵a=%s , b=%s , c=%s &quot;</span> % (a,b,c))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵Δ=b^2-4ac&quot;</span>)<br>delta=b**<span class="hljs-number">2</span>-<span class="hljs-number">4</span>*a*c<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∴Δ=%s^2-4*%s*%s=%s&quot;</span> % (b,a,c,delta))<br></code></pre></td></tr></table></figure><p><strong>图像示例:</strong><br><img src="https://z4a.net/images/2022/09/13/5.png" alt="开头示例"></p><p>判断Δ的值后，根据值的不同，选择不同的输出方法<br><br>情况 : delta &gt; 0 如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs PYTHON"><span class="hljs-keyword">if</span> delta &gt; <span class="hljs-number">0</span> :<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵Δ&gt;0 有两个不相等的实数根&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵-b±√(b^2-4ac)/2a&quot;</span>)<br>x_1 = (-b + numpy.sqrt(b ** <span class="hljs-number">2</span> - <span class="hljs-number">4</span> * a * c)) / <span class="hljs-number">2</span> * a<br>x_2 = (-b - numpy.sqrt(b ** <span class="hljs-number">2</span> - <span class="hljs-number">4</span> * a * c)) / <span class="hljs-number">2</span> * a<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_1=-%s+√(%s^2-4*%s*%s)/2*%s=%s&quot;</span> % (b, b, a, c, a,x_1))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_2=-%s-√(%s^2-4*%s*%s)/2*%s=%s&quot;</span> % (b, b, a, c, a,x_2))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_1=%s    x_2=%s&quot;</span> % (x_1,x_2))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x轴存在2个交点，为(%s,0)、(%s,0)&quot;</span> % (x_1,x_2))<br></code></pre></td></tr></table></figure><p><strong>图像示例:</strong><br><img src="https://z4a.net/images/2022/09/13/6.png" alt="delta > 0" style="zoom:110%;" /></p><p>情况 : delta &#x3D; 0 如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs PYTHON"><span class="hljs-keyword">if</span> delta == <span class="hljs-number">0</span> :<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵Δ=0 有两个相等的实数根&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵-b±√(b^2-4ac)/2a&quot;</span>)<br>x_1 = (-b + numpy.sqrt(b ** <span class="hljs-number">2</span> - <span class="hljs-number">4</span> * a * c)) / <span class="hljs-number">2</span> * a<br>x_2 = (-b - numpy.sqrt(b ** <span class="hljs-number">2</span> - <span class="hljs-number">4</span> * a * c)) / <span class="hljs-number">2</span> * a<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_1=-%s+√(%s^2-4*%s*%s)/2*%s=%s&quot;</span> % (b, b, a, c, a, x_1))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_2=-%s-√(%s^2-4*%s*%s)/2*%s=%s&quot;</span> % (b, b, a, c, a, x_2))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_1=x_2=%s&quot;</span> % (x_1))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x轴存在1个交点，为(%s,0)&quot;</span> % x_1)<br></code></pre></td></tr></table></figure><p><strong>图像示例:</strong><br><img src="https://z4a.net/images/2022/09/13/7.png" alt="delta = 0" style="zoom:110%;" /></p><p>情况 : delt &lt; 0 如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs PYTHON"><span class="hljs-keyword">if</span> delta &lt; <span class="hljs-number">0</span> :<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵Δ&lt;0 没有实数根&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x轴不存在交点&quot;</span>)<br></code></pre></td></tr></table></figure><p><strong>图像示例:</strong><br><img src="https://z4a.net/images/2022/09/13/8.png" alt="delt < 0" style="zoom:120%;" /></p><h4 id="更新源码"><a href="#更新源码" class="headerlink" title="更新源码"></a>更新源码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs PYTHON"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Funcation_analysis</span>():<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;二次函数——函数分析&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;对称轴:&quot;</span>)<br>function_x = -(b / (<span class="hljs-number">2</span> * a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;函数对称轴x=&quot;</span>, function_x)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;特殊点:&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;①顶点:&quot;</span>)<br>x_apex=-(b/(<span class="hljs-number">2</span>*a))<br>y_apex=(((<span class="hljs-number">4</span>*a*c)-(b**<span class="hljs-number">2</span>))/(<span class="hljs-number">4</span>*a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;函数顶点(%s,%s)&quot;</span>%(x_apex,y_apex))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;②y轴交点:&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;函数交y轴于(0,%s)&quot;</span> % c)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;③x轴交点:&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x轴交点计算过程如下&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵a=%s , b=%s , c=%s &quot;</span> % (a,b,c))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵Δ=b^2-4ac&quot;</span>)<br>delta=b**<span class="hljs-number">2</span>-<span class="hljs-number">4</span>*a*c<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∴Δ=%s^2-4*%s*%s=%s&quot;</span> % (b,a,c,delta))<br><span class="hljs-keyword">if</span> delta &gt; <span class="hljs-number">0</span> :<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵Δ&gt;0 有两个不相等的实数根&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵-b±√(b^2-4ac)/2a&quot;</span>)<br>x_1 = (-b + numpy.sqrt(b ** <span class="hljs-number">2</span> - <span class="hljs-number">4</span> * a * c)) / <span class="hljs-number">2</span> * a<br>x_2 = (-b - numpy.sqrt(b ** <span class="hljs-number">2</span> - <span class="hljs-number">4</span> * a * c)) / <span class="hljs-number">2</span> * a<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_1=-%s+√(%s^2-4*%s*%s)/2*%s=%s&quot;</span> % (b, b, a, c, a,x_1))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_2=-%s-√(%s^2-4*%s*%s)/2*%s=%s&quot;</span> % (b, b, a, c, a,x_2))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_1=%s    x_2=%s&quot;</span> % (x_1,x_2))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x轴存在2个交点，为(%s,0)、(%s,0)&quot;</span> % (x_1,x_2))<br><span class="hljs-keyword">if</span> delta == <span class="hljs-number">0</span> :<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵Δ=0 有两个相等的实数根&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵-b±√(b^2-4ac)/2a&quot;</span>)<br>x_1 = (-b + numpy.sqrt(b ** <span class="hljs-number">2</span> - <span class="hljs-number">4</span> * a * c)) / <span class="hljs-number">2</span> * a<br>x_2 = (-b - numpy.sqrt(b ** <span class="hljs-number">2</span> - <span class="hljs-number">4</span> * a * c)) / <span class="hljs-number">2</span> * a<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_1=-%s+√(%s^2-4*%s*%s)/2*%s=%s&quot;</span> % (b, b, a, c, a, x_1))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_2=-%s-√(%s^2-4*%s*%s)/2*%s=%s&quot;</span> % (b, b, a, c, a, x_2))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_1=x_2=%s&quot;</span> % (x_1))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x轴存在1个交点，为(%s,0)&quot;</span> % x_1)<br><span class="hljs-keyword">if</span> delta &lt; <span class="hljs-number">0</span> :<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵Δ&lt;0 没有实数根&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x轴不存在交点&quot;</span>)<br><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;函数方向与极值&quot;</span>)<br><span class="hljs-keyword">if</span> a&gt;<span class="hljs-number">0</span>:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵a&gt;0 ∴函数存在最小值——当x=%s时y=%s&quot;</span>%(x_apex,y_apex))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∴二次函数开口向上，最大值不存在&quot;</span>)<br><span class="hljs-keyword">else</span>:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∵a&lt;0 ∴函数存在最大值——当x=%s时或y=%s&quot;</span> % (x_apex, y_apex))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;∴二次函数开口向下，最小值不存在&quot;</span>)<br></code></pre></td></tr></table></figure><p><strong>图像示例:</strong><br><img src="https://z4a.net/images/2022/09/13/9.png" alt="模块更新示例" style="zoom:145%;" /></p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Python绘图</category>
      
      <category>Python数据处理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python绘图</tag>
      
      <tag>Python数据处理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo示例文件</title>
    <link href="/posts/hexo_example.html"/>
    <url>/posts/hexo_example.html</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
